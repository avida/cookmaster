package cookmaster.server;import java.io.BufferedReader;import java.io.IOException;import java.io.PrintWriter;import java.util.Enumeration;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.json.JSONArray;import org.json.JSONObject;import org.json.JSONException;import com.google.appengine.api.datastore.DatastoreService;import com.google.appengine.api.datastore.DatastoreServiceFactory;import com.google.appengine.api.datastore.EmbeddedEntity;import com.google.appengine.api.datastore.Entity;import com.google.appengine.api.datastore.Text;public class DBInterface extends HttpServlet {		private DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();	public static final String RecipeKey = "Recipe";	public static final String manualProp = "manual";	public static final String captionProp = "caption";	public static final String ingridientsProp = "ingridients";	public static final String urlProp = "url";	@Override	protected void doGet( HttpServletRequest req, HttpServletResponse resp)		throws IOException{		resp.setCharacterEncoding("UTF-8");		PrintWriter out = resp.getWriter();		out.println("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">");		out.println("Hi this is db interface<br>");		out.println( "Привет, это интерфейс к базе данных<br>\n" );		for ( Enumeration<String> names_iterator = req.getHeaderNames(); names_iterator.hasMoreElements(); ){			String name = names_iterator.nextElement();			for (Enumeration<String> values_iterator = req.getHeaders(name); values_iterator.hasMoreElements();){				out.println ( name + ": " + values_iterator.nextElement()+"<br>");			}		}		out.flush();	}	protected void doPost( HttpServletRequest req, HttpServletResponse resp)	{			Entity recipe = new Entity(RecipeKey);		EmbeddedEntity ingridient_list = new EmbeddedEntity();		ingridient_list.setKey( recipe.getKey());		PrintWriter out = null; 		try {		out = resp.getWriter();		// reading out request body		BufferedReader reader =  req.getReader();		String data = new String();		String line = null;		while ( (line = reader.readLine()) != null)		{			data += line;		}		JSONObject obj = new JSONObject(data);		recipe.setProperty(captionProp, obj.getString("caption"));		recipe.setProperty(manualProp, new Text(obj.getString("manual")) );		recipe.setProperty(urlProp, obj.getString("url"));		JSONArray ingridients =  obj.getJSONArray("ingridients");				for (int i = 0; i < ingridients.length(); ++i){			JSONArray item = ingridients.getJSONArray( i );			String name = item.getString(0);			String amount = item.getString(1);			ingridient_list.setProperty(name, amount);		}		recipe.setProperty(ingridientsProp, ingridient_list);		datastore.put(recipe);		}catch (IOException e){					}		catch (JSONException e){			out.println("error parsing json");		}	}}